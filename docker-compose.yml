version: '3.3'

services:
    db:
        restart: always
        image: postgres:13.1
        container_name: mlflow_db
        expose:
            - "5432"
        networks:
            - backend
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - ./postgres/data:/var/lib/postgresql/data

    minio:
        image: minio/minio:RELEASE.2021-02-11T08-23-43Z
        container_name: mlflow_minio
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - ./minio/data:/data
        ports:
            - "9000:9000"
        networks:
            - backend
        command: server /data

    web:
        restart: always
        build:
            context: ./mlflow
            dockerfile: Dockerfile
            args:
                # Set proxy for pip
                - HTTP_PROXY=${PROXY}
                - HTTPS_PROXY=${PROXY}
        image: mlflow_server
        container_name: mlflow_server
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000/
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        expose:
            - "5000"
        networks:
            - frontend
            - backend
        depends_on:
            - db
            - minio
        command: mlflow server --backend-store-uri postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB} --default-artifact-root s3://${S3_BUCKET}/ --host 0.0.0.0 --port 5000

    nginx:
        restart: always
        build: ./nginx
        image: mlflow_nginx
        container_name: mlflow_nginx
        ports:
            - "5000:80"
        networks:
            - frontend
        depends_on:
            - web

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
